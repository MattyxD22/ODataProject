//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace NavisionWebsite.CustomerCodeUnit {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="CustomerCodeUnit_Binding", Namespace="urn:microsoft-dynamics-schemas/codeunit/CustomerCodeUnit")]
    public partial class CustomerCodeUnit : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetCustomerNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback CapitalizeOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public CustomerCodeUnit() {
            this.Url = global::NavisionWebsite.Properties.Settings.Default.NavisionWebsite_CustomerCodeUnit_CustomerCodeUnit;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetCustomerNameCompletedEventHandler GetCustomerNameCompleted;
        
        /// <remarks/>
        public event CapitalizeCompletedEventHandler CapitalizeCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CustomerCodeUnit:GetCustomerName", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CustomerCodeUnit", ResponseElementName="GetCustomerName_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CustomerCodeUnit", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetCustomerName() {
            object[] results = this.Invoke("GetCustomerName", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerNameAsync() {
            this.GetCustomerNameAsync(null);
        }
        
        /// <remarks/>
        public void GetCustomerNameAsync(object userState) {
            if ((this.GetCustomerNameOperationCompleted == null)) {
                this.GetCustomerNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerNameOperationCompleted);
            }
            this.InvokeAsync("GetCustomerName", new object[0], this.GetCustomerNameOperationCompleted, userState);
        }
        
        private void OnGetCustomerNameOperationCompleted(object arg) {
            if ((this.GetCustomerNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerNameCompleted(this, new GetCustomerNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CustomerCodeUnit:Capitalize", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CustomerCodeUnit", ResponseElementName="Capitalize_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CustomerCodeUnit", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string Capitalize(string input) {
            object[] results = this.Invoke("Capitalize", new object[] {
                        input});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CapitalizeAsync(string input) {
            this.CapitalizeAsync(input, null);
        }
        
        /// <remarks/>
        public void CapitalizeAsync(string input, object userState) {
            if ((this.CapitalizeOperationCompleted == null)) {
                this.CapitalizeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCapitalizeOperationCompleted);
            }
            this.InvokeAsync("Capitalize", new object[] {
                        input}, this.CapitalizeOperationCompleted, userState);
        }
        
        private void OnCapitalizeOperationCompleted(object arg) {
            if ((this.CapitalizeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CapitalizeCompleted(this, new CapitalizeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetCustomerNameCompletedEventHandler(object sender, GetCustomerNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CapitalizeCompletedEventHandler(object sender, CapitalizeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CapitalizeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CapitalizeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591